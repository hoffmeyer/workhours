// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Fetch = require("bs-fetch/src/Fetch.js");
var React = require("react");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");

function str(prim) {
  return prim;
}

function cred(m) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "username",
                m[/* username */0]
              ],
              /* :: */[
                /* tuple */[
                  "password",
                  m[/* password */1]
                ],
                /* [] */0
              ]
            ]);
}

var Encode = /* module */[/* cred */cred];

var component = ReasonReact.reducerComponent("Login");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              return React.createElement("div", undefined, React.createElement("h1", undefined, "Login page"), React.createElement("input", {
                              value: state[/* username */0],
                              onChange: (function ($$event) {
                                  return Curry._1(send, /* UsernameKeyDown */Block.__(0, [$$event.target.value]));
                                })
                            }), React.createElement("input", {
                              value: state[/* password */1],
                              onChange: (function ($$event) {
                                  return Curry._1(send, /* PasswordKeyDown */Block.__(1, [$$event.target.value]));
                                })
                            }), React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(send, /* LoginClicked */0);
                                })
                            }, "Login"));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* username */"",
                      /* password */""
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                return /* UpdateWithSideEffects */Block.__(2, [
                          state,
                          (function () {
                              fetch("/api/login", Fetch.RequestInit[/* make */0](/* Post */2, undefined, Js_primitive.some(JSON.stringify(cred(state))), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)).then((function (prim) {
                                        return prim.text();
                                      })).then((function (text) {
                                      console.log(text);
                                      ReasonReact.Router[/* push */0]("/");
                                      return Promise.resolve(/* () */0);
                                    }));
                              return /* () */0;
                            })
                        ]);
              } else if (action.tag) {
                return /* Update */Block.__(0, [/* record */[
                            /* username */state[/* username */0],
                            /* password */action[0]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* username */action[0],
                            /* password */state[/* password */1]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.str = str;
exports.Encode = Encode;
exports.component = component;
exports.make = make;
/* component Not a pure module */
