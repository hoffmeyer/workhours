// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Types$Workhours = require("./types.bs.js");
var Config$Workhours = require("./Config.bs.js");
var Router$Workhours = require("./Router.bs.js");

((require('./app.css')));

function str(prim) {
  return prim;
}

var component = ReasonReact.reducerComponent("App");

function make(currentRoute, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* WorkFetch */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1];
              var tmp;
              tmp = typeof match === "number" ? React.createElement("p", undefined, "Loading") : (
                  match.tag ? React.createElement("div", undefined, Config$Workhours.routeToComponent(currentRoute, match[0], (function (action) {
                                return Curry._1(self[/* send */3], action);
                              }))) : React.createElement("div", undefined, match[0])
                );
              return React.createElement("div", {
                          className: "App"
                        }, React.createElement("div", {
                              className: "App-header"
                            }, React.createElement("h2", undefined, "Workhours")), React.createElement("div", undefined, React.createElement("nav", undefined, React.createElement("ul", {
                                      className: "navigation"
                                    }, React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Router$Workhours.NavLink[/* make */1](/* Home */0, undefined, undefined, /* array */["Home"]))), React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Router$Workhours.NavLink[/* make */1](/* Edit */1, undefined, undefined, /* array */["Edit"]))), React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Router$Workhours.NavLink[/* make */1](/* List */2, undefined, undefined, /* array */["List"]))))), React.createElement("main", undefined, tmp)));
            }),
          /* initialState */(function () {
              return /* Loading */0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* Loading */0,
                          (function (self) {
                              fetch("/api/work/latest").then((function (res) {
                                          var status = res.status;
                                          if (status !== 200) {
                                            if (status !== 401) {
                                              return Js_exn.raiseError(res.statusText);
                                            } else {
                                              ReasonReact.Router[/* push */0]("/login");
                                              return Js_exn.raiseError(res.statusText);
                                            }
                                          } else {
                                            return res.json();
                                          }
                                        })).then((function (json) {
                                        var work = Types$Workhours.Decode[/* workList */1](json);
                                        return Promise.resolve(Curry._1(self[/* send */3], /* WorkFetched */Block.__(2, [work])));
                                      })).catch((function (err) {
                                      console.log("Error loading latest work: ", err);
                                      return Promise.resolve(Curry._1(self[/* send */3], /* WorkFetchFailed */Block.__(3, ["Error loading leatest work"])));
                                    }));
                              return /* () */0;
                            })
                        ]);
              } else {
                switch (action.tag | 0) {
                  case 0 : 
                      if (typeof state === "number" || !state.tag) {
                        return /* Update */Block.__(0, [/* Error */Block.__(0, ["Failed to add new work"])]);
                      } else {
                        var workList = state[0];
                        workList.push(action[0]);
                        return /* Update */Block.__(0, [/* Loaded */Block.__(1, [workList])]);
                      }
                  case 1 : 
                      var work = action[0];
                      if (typeof state === "number" || !state.tag) {
                        return /* Update */Block.__(0, [/* Error */Block.__(0, ["Failed to update work"])]);
                      } else {
                        var newList = state[0].map((function (w) {
                                if (Caml_obj.caml_equal(w[/* id */0], work[/* id */0])) {
                                  return work;
                                } else {
                                  return w;
                                }
                              }));
                        return /* Update */Block.__(0, [/* Loaded */Block.__(1, [newList])]);
                      }
                  case 2 : 
                      return /* Update */Block.__(0, [/* Loaded */Block.__(1, [action[0]])]);
                  case 3 : 
                      return /* Update */Block.__(0, [/* Error */Block.__(0, [action[0]])]);
                  
                }
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.str = str;
exports.component = component;
exports.make = make;
/*  Not a pure module */
